{
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); //Conection to base de datos mongo db\n\nvar mongoose = require('mongoose'); //Conexión LOCAL\n\n\nvar uri = 'mongodb://localhost:27017/udemymevn'; //Conexión en la nube\n//const uri = 'mongodb+srv://user_mevn:Ja2JecSNQ3SkVyXC@mevn-9zteq.mongodb.net/mevn?retryWrites=true&w=majority';\n\nvar options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false,\n  autoIndex: false,\n  // Don't build indexes\n  poolSize: 10,\n  // Maintain up to 10 socket connections\n  serverSelectionTimeoutMS: 5000,\n  // Keep trying to send operations for 5 seconds\n  socketTimeoutMS: 45000,\n  // Close sockets after 45 seconds of inactivity\n  family: 4 // Use IPv4, skip trying IPv6\n\n};\nmongoose.connect(uri, options).then(function () {\n  console.log('Conectado a MongoDB');\n}, function (err) {\n  error;\n});\napp.use((0, _morgan[\"default\"])('tiny'));\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n})); //Rutas de la app\n\n/*app.get('/',  (req, res) => {\n\tres.send('Hola mundo Jorge!');\n});*/\n\napp.use('/api', require('./routes/nota'));\napp.use('/api', require('./routes/user'));\napp.use('/login', require('./routes/login')); // Middleware para vue.js router mode history\n\nvar history = require('connect-history-api-fallback');\n\napp.use(history());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'public')));\napp.set('puerto', process.env.PORT || 3000);\napp.listen(app.get('puerto'), function () {\n  console.log('Servidor corriendo en: ', app.get('puerto'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJtb25nb29zZSIsInJlcXVpcmUiLCJ1cmkiLCJvcHRpb25zIiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidXNlQ3JlYXRlSW5kZXgiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwiYXV0b0luZGV4IiwicG9vbFNpemUiLCJzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVMiLCJzb2NrZXRUaW1lb3V0TVMiLCJmYW1pbHkiLCJjb25uZWN0IiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJlcnJvciIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiaGlzdG9yeSIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwic2V0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJsaXN0ZW4iLCJnZXQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUNBOztBQUNBLElBQU1DLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEIsQyxDQUNBOzs7QUFDQSxJQUFNQyxHQUFHLEdBQUcscUNBQVosQyxDQUNBO0FBQ0E7O0FBRUEsSUFBTUMsT0FBTyxHQUFHO0FBQ2RDLEVBQUFBLGVBQWUsRUFBRSxJQURIO0FBRWRDLEVBQUFBLGtCQUFrQixFQUFFLElBRk47QUFHZEMsRUFBQUEsY0FBYyxFQUFFLElBSEY7QUFJZEMsRUFBQUEsZ0JBQWdCLEVBQUUsS0FKSjtBQUtkQyxFQUFBQSxTQUFTLEVBQUUsS0FMRztBQUtJO0FBQ2xCQyxFQUFBQSxRQUFRLEVBQUUsRUFOSTtBQU1BO0FBQ2RDLEVBQUFBLHdCQUF3QixFQUFFLElBUFo7QUFPa0I7QUFDaENDLEVBQUFBLGVBQWUsRUFBRSxLQVJIO0FBUVU7QUFDeEJDLEVBQUFBLE1BQU0sRUFBRSxDQVRNLENBU0o7O0FBVEksQ0FBaEI7QUFXQVosUUFBUSxDQUFDYSxPQUFULENBQWlCWCxHQUFqQixFQUFzQkMsT0FBdEIsRUFBK0JXLElBQS9CLENBQ0UsWUFBTTtBQUFFQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjtBQUFvQyxDQUQ5QyxFQUVFLFVBQUFDLEdBQUcsRUFBSTtBQUFFQyxFQUFBQSxLQUFLO0FBQUUsQ0FGbEI7QUFLQW5CLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUSx3QkFBTyxNQUFQLENBQVI7QUFDQXBCLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUSx1QkFBUjtBQUNBcEIsR0FBRyxDQUFDb0IsR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSO0FBQ0F0QixHQUFHLENBQUNvQixHQUFKLENBQVFDLG9CQUFRRSxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVIsRSxDQUVBOztBQUNBOzs7O0FBR0F4QixHQUFHLENBQUNvQixHQUFKLENBQVMsTUFBVCxFQUFpQmxCLE9BQU8sQ0FBQyxlQUFELENBQXhCO0FBQ0FGLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUyxNQUFULEVBQWlCbEIsT0FBTyxDQUFDLGVBQUQsQ0FBeEI7QUFDQUYsR0FBRyxDQUFDb0IsR0FBSixDQUFTLFFBQVQsRUFBbUJsQixPQUFPLENBQUMsZ0JBQUQsQ0FBMUIsRSxDQUNBOztBQUNBLElBQU11QixPQUFPLEdBQUd2QixPQUFPLENBQUMsOEJBQUQsQ0FBdkI7O0FBQ0FGLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUUssT0FBTyxFQUFmO0FBQ0F6QixHQUFHLENBQUNvQixHQUFKLENBQVFDLDhCQUFlSyxpQkFBS0MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjtBQUVBNUIsR0FBRyxDQUFDNkIsR0FBSixDQUFRLFFBQVIsRUFBa0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXRDO0FBQ0FoQyxHQUFHLENBQUNpQyxNQUFKLENBQVdqQyxHQUFHLENBQUNrQyxHQUFKLENBQVEsUUFBUixDQUFYLEVBQThCLFlBQU07QUFDbkNsQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWixFQUF1Q2pCLEdBQUcsQ0FBQ2tDLEdBQUosQ0FBUSxRQUFSLENBQXZDO0FBQ0EsQ0FGRCIsInNvdXJjZVJvb3QiOiIvdmFyL3d3dy8xN3Z1ZW1ldm4vTUVWTiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzICBmcm9tICdleHByZXNzJztcbmltcG9ydCBtb3JnYW4gIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgY29ycyAgZnJvbSAnY29ycyc7XG5pbXBvcnQgcGF0aCAgZnJvbSAncGF0aCc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbi8vQ29uZWN0aW9uIHRvIGJhc2UgZGUgZGF0b3MgbW9uZ28gZGJcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbi8vQ29uZXhpw7NuIExPQ0FMXG5jb25zdCB1cmkgPSAnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy91ZGVteW1ldm4nO1xuLy9Db25leGnDs24gZW4gbGEgbnViZVxuLy9jb25zdCB1cmkgPSAnbW9uZ29kYitzcnY6Ly91c2VyX21ldm46SmEySmVjU05RM1NrVnlYQ0BtZXZuLTl6dGVxLm1vbmdvZGIubmV0L21ldm4/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JztcblxuY29uc3Qgb3B0aW9ucyA9IHtcbiAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gIHVzZUNyZWF0ZUluZGV4OiB0cnVlLFxuICB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZSxcbiAgYXV0b0luZGV4OiBmYWxzZSwgLy8gRG9uJ3QgYnVpbGQgaW5kZXhlc1xuICBwb29sU2l6ZTogMTAsIC8vIE1haW50YWluIHVwIHRvIDEwIHNvY2tldCBjb25uZWN0aW9uc1xuICBzZXJ2ZXJTZWxlY3Rpb25UaW1lb3V0TVM6IDUwMDAsIC8vIEtlZXAgdHJ5aW5nIHRvIHNlbmQgb3BlcmF0aW9ucyBmb3IgNSBzZWNvbmRzXG4gIHNvY2tldFRpbWVvdXRNUzogNDUwMDAsIC8vIENsb3NlIHNvY2tldHMgYWZ0ZXIgNDUgc2Vjb25kcyBvZiBpbmFjdGl2aXR5XG4gIGZhbWlseTogNCAvLyBVc2UgSVB2NCwgc2tpcCB0cnlpbmcgSVB2NlxufVxubW9uZ29vc2UuY29ubmVjdCh1cmksIG9wdGlvbnMpLnRoZW4oXG4gICgpID0+IHsgY29uc29sZS5sb2coJ0NvbmVjdGFkbyBhIE1vbmdvREInKSB9LFxuICBlcnIgPT4geyBlcnJvciB9XG4pO1xuXG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5cbi8vUnV0YXMgZGUgbGEgYXBwXG4vKmFwcC5nZXQoJy8nLCAgKHJlcSwgcmVzKSA9PiB7XG5cdHJlcy5zZW5kKCdIb2xhIG11bmRvIEpvcmdlIScpO1xufSk7Ki9cbmFwcC51c2UgKCcvYXBpJywgcmVxdWlyZSgnLi9yb3V0ZXMvbm90YScpKTtcbmFwcC51c2UgKCcvYXBpJywgcmVxdWlyZSgnLi9yb3V0ZXMvdXNlcicpKTtcbmFwcC51c2UgKCcvbG9naW4nLCByZXF1aXJlKCcuL3JvdXRlcy9sb2dpbicpKTtcbi8vIE1pZGRsZXdhcmUgcGFyYSB2dWUuanMgcm91dGVyIG1vZGUgaGlzdG9yeVxuY29uc3QgaGlzdG9yeSA9IHJlcXVpcmUoJ2Nvbm5lY3QtaGlzdG9yeS1hcGktZmFsbGJhY2snKVxuYXBwLnVzZShoaXN0b3J5KCkpXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpXG5cbmFwcC5zZXQoJ3B1ZXJ0bycsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMClcbmFwcC5saXN0ZW4oYXBwLmdldCgncHVlcnRvJyksICgpID0+IHtcblx0Y29uc29sZS5sb2coJ1NlcnZpZG9yIGNvcnJpZW5kbyBlbjogJywgYXBwLmdldCgncHVlcnRvJykpXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "mongoose",
        "require",
        "uri",
        "options",
        "useNewUrlParser",
        "useUnifiedTopology",
        "useCreateIndex",
        "useFindAndModify",
        "autoIndex",
        "poolSize",
        "serverSelectionTimeoutMS",
        "socketTimeoutMS",
        "family",
        "connect",
        "then",
        "console",
        "log",
        "err",
        "error",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "history",
        "path",
        "join",
        "__dirname",
        "set",
        "process",
        "env",
        "PORT",
        "listen",
        "get"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CACA;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CACA;;;AACA,IAAMC,GAAG,GAAG,qCAAZ,C,CACA;AACA;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAE,IADH;AAEdC,EAAAA,kBAAkB,EAAE,IAFN;AAGdC,EAAAA,cAAc,EAAE,IAHF;AAIdC,EAAAA,gBAAgB,EAAE,KAJJ;AAKdC,EAAAA,SAAS,EAAE,KALG;AAKI;AAClBC,EAAAA,QAAQ,EAAE,EANI;AAMA;AACdC,EAAAA,wBAAwB,EAAE,IAPZ;AAOkB;AAChCC,EAAAA,eAAe,EAAE,KARH;AAQU;AACxBC,EAAAA,MAAM,EAAE,CATM,CASJ;;AATI,CAAhB;AAWAZ,QAAQ,CAACa,OAAT,CAAiBX,GAAjB,EAAsBC,OAAtB,EAA+BW,IAA/B,CACE,YAAM;AAAEC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAAoC,CAD9C,EAEE,UAAAC,GAAG,EAAI;AAAEC,EAAAA,KAAK;AAAE,CAFlB;AAKAnB,GAAG,CAACoB,GAAJ,CAAQ,wBAAO,MAAP,CAAR;AACApB,GAAG,CAACoB,GAAJ,CAAQ,uBAAR;AACApB,GAAG,CAACoB,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAtB,GAAG,CAACoB,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAEA;;AACA;;;;AAGAxB,GAAG,CAACoB,GAAJ,CAAS,MAAT,EAAiBlB,OAAO,CAAC,eAAD,CAAxB;AACAF,GAAG,CAACoB,GAAJ,CAAS,MAAT,EAAiBlB,OAAO,CAAC,eAAD,CAAxB;AACAF,GAAG,CAACoB,GAAJ,CAAS,QAAT,EAAmBlB,OAAO,CAAC,gBAAD,CAA1B,E,CACA;;AACA,IAAMuB,OAAO,GAAGvB,OAAO,CAAC,8BAAD,CAAvB;;AACAF,GAAG,CAACoB,GAAJ,CAAQK,OAAO,EAAf;AACAzB,GAAG,CAACoB,GAAJ,CAAQC,8BAAeK,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEA5B,GAAG,CAAC6B,GAAJ,CAAQ,QAAR,EAAkBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAtC;AACAhC,GAAG,CAACiC,MAAJ,CAAWjC,GAAG,CAACkC,GAAJ,CAAQ,QAAR,CAAX,EAA8B,YAAM;AACnClB,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCjB,GAAG,CAACkC,GAAJ,CAAQ,QAAR,CAAvC;AACA,CAFD",
      "sourceRoot": "/var/www/17vuemevn/MEVN",
      "sourcesContent": [
        "import express  from 'express';\nimport morgan  from 'morgan';\nimport cors  from 'cors';\nimport path  from 'path';\n\nconst app = express();\n//Conection to base de datos mongo db\nconst mongoose = require('mongoose');\n//Conexión LOCAL\nconst uri = 'mongodb://localhost:27017/udemymevn';\n//Conexión en la nube\n//const uri = 'mongodb+srv://user_mevn:Ja2JecSNQ3SkVyXC@mevn-9zteq.mongodb.net/mevn?retryWrites=true&w=majority';\n\nconst options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false,\n  autoIndex: false, // Don't build indexes\n  poolSize: 10, // Maintain up to 10 socket connections\n  serverSelectionTimeoutMS: 5000, // Keep trying to send operations for 5 seconds\n  socketTimeoutMS: 45000, // Close sockets after 45 seconds of inactivity\n  family: 4 // Use IPv4, skip trying IPv6\n}\nmongoose.connect(uri, options).then(\n  () => { console.log('Conectado a MongoDB') },\n  err => { error }\n);\n\napp.use(morgan('tiny'));\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n//Rutas de la app\n/*app.get('/',  (req, res) => {\n\tres.send('Hola mundo Jorge!');\n});*/\napp.use ('/api', require('./routes/nota'));\napp.use ('/api', require('./routes/user'));\napp.use ('/login', require('./routes/login'));\n// Middleware para vue.js router mode history\nconst history = require('connect-history-api-fallback')\napp.use(history())\napp.use(express.static(path.join(__dirname, 'public')))\n\napp.set('puerto', process.env.PORT || 3000)\napp.listen(app.get('puerto'), () => {\n\tconsole.log('Servidor corriendo en: ', app.get('puerto'))\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1584783140724
  },
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/routes/nota.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/routes/nota.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/routes/nota.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/routes/nota.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
        "sourceFileName": "nota.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _nota = _interopRequireDefault(require(\"../models/nota\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = _express[\"default\"].Router(); //importar el modelo nota\n\n\nvar _require = require('../middlewares/autenticacion'),\n    verificarAuth = _require.verificarAuth,\n    verificarAdministrador = _require.verificarAdministrador; //Agregar nota\n\n\nrouter.post('/nueva-nota', verificarAuth, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var body, notaDB;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = req.body;\n            body.usuarioId = req.usuario._id;\n            _context.prev = 2;\n            _context.next = 5;\n            return _nota[\"default\"].create(body);\n\n          case 5:\n            notaDB = _context.sent;\n            res.status(200).json(notaDB);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", res.status(500).json({\n              mensaje: 'Ocurrio un error',\n              error: _context.t0\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //Get con parametros\n\nrouter.get('/nota/:id', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _id, notaDB;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = req.params.id;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _nota[\"default\"].findOne({\n              _id: _id\n            });\n\n          case 4:\n            notaDB = _context2.sent;\n            res.json(notaDB);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              mensaje: 'Ocurrio un error',\n              error: _context2.t0\n            }));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //Get con todos los documentos\n\nrouter.get('/nota', verificarAuth, /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var usuarioId, notaDB;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            usuarioId = req.usuario._id;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _nota[\"default\"].find({\n              usuarioId: usuarioId\n            });\n\n          case 4:\n            notaDB = _context3.sent;\n            res.json(notaDB);\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            return _context3.abrupt(\"return\", res.status(400).json({\n              mensaje: 'Ocurrio un error',\n              error: _context3.t0\n            }));\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //Delete eliminar una nota\n\nrouter[\"delete\"]('/nota/:id', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _id, notaDB;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _id = req.params.id;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _nota[\"default\"].findByIdAndDelete({\n              _id: _id\n            });\n\n          case 4:\n            notaDB = _context4.sent;\n\n            if (notaDB) {\n              _context4.next = 7;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(400).json({\n              mensaje: 'Ocurrio un error',\n              error: error\n            }));\n\n          case 7:\n            res.json(notaDB);\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](1);\n            return _context4.abrupt(\"return\", res.status(400).json({\n              mensaje: 'Ocurrio un error',\n              error: _context4.t0\n            }));\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 10]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}()); //PUT Actualizar una nota\n\nrouter.put('/nota/:id', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _id, body, notaDB;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _id = req.params.id;\n            body = req.body;\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _nota[\"default\"].findByIdAndUpdate(_id, body, {\n              \"new\": true\n            });\n\n          case 5:\n            notaDB = _context5.sent;\n            res.json(notaDB);\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](2);\n            return _context5.abrupt(\"return\", res.status(400).json({\n              mensaje: 'Ocurrio un error',\n              error: _context5.t0\n            }));\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 9]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //exportacion de router\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGEuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInJlcXVpcmUiLCJ2ZXJpZmljYXJBdXRoIiwidmVyaWZpY2FyQWRtaW5pc3RyYWRvciIsInBvc3QiLCJyZXEiLCJyZXMiLCJib2R5IiwidXN1YXJpb0lkIiwidXN1YXJpbyIsIl9pZCIsIk5vdGEiLCJjcmVhdGUiLCJub3RhREIiLCJzdGF0dXMiLCJqc29uIiwibWVuc2FqZSIsImVycm9yIiwiZ2V0IiwicGFyYW1zIiwiaWQiLCJmaW5kT25lIiwiZmluZCIsImZpbmRCeUlkQW5kRGVsZXRlIiwicHV0IiwiZmluZEJ5SWRBbmRVcGRhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUlBOzs7Ozs7OztBQUhBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZixDLENBRUE7OztlQUdnREMsT0FBTyxDQUFDLDhCQUFELEM7SUFBaERDLGEsWUFBQUEsYTtJQUFlQyxzQixZQUFBQSxzQixFQUd0Qjs7O0FBQ0FMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLGFBQVosRUFBMkJGLGFBQTNCO0FBQUEscUVBQTBDLGlCQUFNRyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25DQyxZQUFBQSxJQURtQyxHQUM1QkYsR0FBRyxDQUFDRSxJQUR3QjtBQUV6Q0EsWUFBQUEsSUFBSSxDQUFDQyxTQUFMLEdBQWlCSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsR0FBN0I7QUFGeUM7QUFBQTtBQUFBLG1CQUluQkMsaUJBQUtDLE1BQUwsQ0FBWUwsSUFBWixDQUptQjs7QUFBQTtBQUlsQ00sWUFBQUEsTUFKa0M7QUFLeENQLFlBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixNQUFyQjtBQUx3QztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLDZDQU9qQ1AsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDM0JDLGNBQUFBLE9BQU8sRUFBRSxrQkFEa0I7QUFFM0JDLGNBQUFBLEtBQUs7QUFGc0IsYUFBckIsQ0FQaUM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBMUM7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSyxDQWNBOztBQUNBbkIsTUFBTSxDQUFDb0IsR0FBUCxDQUFXLFdBQVg7QUFBQSxzRUFBd0Isa0JBQU1iLEdBQU4sRUFBV0MsR0FBWDtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2pCSSxZQUFBQSxHQURpQixHQUNYTCxHQUFHLENBQUNjLE1BQUosQ0FBV0MsRUFEQTtBQUFBO0FBQUE7QUFBQSxtQkFJRFQsaUJBQUtVLE9BQUwsQ0FBYTtBQUFDWCxjQUFBQSxHQUFHLEVBQUhBO0FBQUQsYUFBYixDQUpDOztBQUFBO0FBSWhCRyxZQUFBQSxNQUpnQjtBQUt0QlAsWUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVNGLE1BQVQ7QUFMc0I7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQSw4Q0FPZlAsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDM0JDLGNBQUFBLE9BQU8sRUFBRSxrQkFEa0I7QUFFM0JDLGNBQUFBLEtBQUs7QUFGc0IsYUFBckIsQ0FQZTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF4Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxLLENBY0E7O0FBQ0FuQixNQUFNLENBQUNvQixHQUFQLENBQVcsT0FBWCxFQUFvQmhCLGFBQXBCO0FBQUEsc0VBQW1DLGtCQUFNRyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRTVCRSxZQUFBQSxTQUY0QixHQUVoQkgsR0FBRyxDQUFDSSxPQUFKLENBQVlDLEdBRkk7QUFBQTtBQUFBO0FBQUEsbUJBSVpDLGlCQUFLVyxJQUFMLENBQVU7QUFBQ2QsY0FBQUEsU0FBUyxFQUFUQTtBQUFELGFBQVYsQ0FKWTs7QUFBQTtBQUkzQkssWUFBQUEsTUFKMkI7QUFLakNQLFlBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTRixNQUFUO0FBTGlDO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsOENBTzFCUCxHQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMzQkMsY0FBQUEsT0FBTyxFQUFFLGtCQURrQjtBQUUzQkMsY0FBQUEsS0FBSztBQUZzQixhQUFyQixDQVAwQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFuQzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxLLENBY0E7O0FBQ0FuQixNQUFNLFVBQU4sQ0FBYyxXQUFkO0FBQUEsc0VBQTJCLGtCQUFNTyxHQUFOLEVBQVdDLEdBQVg7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNwQkksWUFBQUEsR0FEb0IsR0FDZEwsR0FBRyxDQUFDYyxNQUFKLENBQVdDLEVBREc7QUFBQTtBQUFBO0FBQUEsbUJBR0pULGlCQUFLWSxpQkFBTCxDQUF1QjtBQUFDYixjQUFBQSxHQUFHLEVBQUhBO0FBQUQsYUFBdkIsQ0FISTs7QUFBQTtBQUduQkcsWUFBQUEsTUFIbUI7O0FBQUEsZ0JBSXJCQSxNQUpxQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSw4Q0FLakJQLEdBQUcsQ0FBQ1EsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzNCQyxjQUFBQSxPQUFPLEVBQUUsa0JBRGtCO0FBRTNCQyxjQUFBQSxLQUFLLEVBQUxBO0FBRjJCLGFBQXJCLENBTGlCOztBQUFBO0FBVXpCWCxZQUFBQSxHQUFHLENBQUNTLElBQUosQ0FBU0YsTUFBVDtBQVZ5QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLDhDQVlsQlAsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDM0JDLGNBQUFBLE9BQU8sRUFBRSxrQkFEa0I7QUFFM0JDLGNBQUFBLEtBQUs7QUFGc0IsYUFBckIsQ0Faa0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBM0I7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSyxDQW1CQTs7QUFDQW5CLE1BQU0sQ0FBQzBCLEdBQVAsQ0FBVyxXQUFYO0FBQUEsc0VBQXdCLGtCQUFNbkIsR0FBTixFQUFXQyxHQUFYO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDakJJLFlBQUFBLEdBRGlCLEdBQ1hMLEdBQUcsQ0FBQ2MsTUFBSixDQUFXQyxFQURBO0FBRWpCYixZQUFBQSxJQUZpQixHQUVWRixHQUFHLENBQUNFLElBRk07QUFBQTtBQUFBO0FBQUEsbUJBSURJLGlCQUFLYyxpQkFBTCxDQUF1QmYsR0FBdkIsRUFBMkJILElBQTNCLEVBQWdDO0FBQUMscUJBQUk7QUFBTCxhQUFoQyxDQUpDOztBQUFBO0FBSWhCTSxZQUFBQSxNQUpnQjtBQUt0QlAsWUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVNGLE1BQVQ7QUFMc0I7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQSw4Q0FPZlAsR0FBRyxDQUFDUSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDM0JDLGNBQUFBLE9BQU8sRUFBRSxrQkFEa0I7QUFFM0JDLGNBQUFBLEtBQUs7QUFGc0IsYUFBckIsQ0FQZTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF4Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxLLENBYUE7O0FBQ0FTLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjdCLE1BQWpCIiwic291cmNlUm9vdCI6Ii92YXIvd3d3LzE3dnVlbWV2bi9NRVZOL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy9pbXBvcnRhciBlbCBtb2RlbG8gbm90YVxuaW1wb3J0IE5vdGEgZnJvbSAnLi4vbW9kZWxzL25vdGEnO1xuXG5jb25zdCB7dmVyaWZpY2FyQXV0aCwgdmVyaWZpY2FyQWRtaW5pc3RyYWRvcn0gPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlcy9hdXRlbnRpY2FjaW9uJylcblxuXG4vL0FncmVnYXIgbm90YVxucm91dGVyLnBvc3QoJy9udWV2YS1ub3RhJywgdmVyaWZpY2FyQXV0aCwgYXN5bmMocmVxLCByZXMpID0+IHtcblx0Y29uc3QgYm9keSA9IHJlcS5ib2R5O1xuXHRib2R5LnVzdWFyaW9JZCA9IHJlcS51c3VhcmlvLl9pZDtcblx0dHJ5e1xuXHRcdGNvbnN0IG5vdGFEQiA9IGF3YWl0IE5vdGEuY3JlYXRlKGJvZHkpO1xuXHRcdHJlcy5zdGF0dXMoMjAwKS5qc29uKG5vdGFEQik7XG5cdH1jYXRjaChlcnJvcil7XG5cdFx0cmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcblx0XHRcdG1lbnNhamU6ICdPY3VycmlvIHVuIGVycm9yJyxcblx0XHRcdGVycm9yOiBlcnJvclxuXHRcdH0pXG5cdH1cbn0pO1xuXG4vL0dldCBjb24gcGFyYW1ldHJvc1xucm91dGVyLmdldCgnL25vdGEvOmlkJywgYXN5bmMocmVxLCByZXMpPT57XG5cdGNvbnN0IF9pZCA9IHJlcS5wYXJhbXMuaWQ7XG5cblx0dHJ5e1xuXHRcdGNvbnN0IG5vdGFEQiA9IGF3YWl0IE5vdGEuZmluZE9uZSh7X2lkfSk7XG5cdFx0cmVzLmpzb24obm90YURCKTtcblx0fWNhdGNoKGVycm9yKXtcblx0XHRyZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuXHRcdFx0bWVuc2FqZTogJ09jdXJyaW8gdW4gZXJyb3InLFxuXHRcdFx0ZXJyb3Jcblx0XHR9KVxuXHR9XG59KTtcblxuLy9HZXQgY29uIHRvZG9zIGxvcyBkb2N1bWVudG9zXG5yb3V0ZXIuZ2V0KCcvbm90YScsIHZlcmlmaWNhckF1dGgsIGFzeW5jKHJlcSwgcmVzKT0+e1xuXG5cdGNvbnN0IHVzdWFyaW9JZCA9IHJlcS51c3VhcmlvLl9pZDtcblx0dHJ5e1xuXHRcdGNvbnN0IG5vdGFEQiA9IGF3YWl0IE5vdGEuZmluZCh7dXN1YXJpb0lkfSk7XG5cdFx0cmVzLmpzb24obm90YURCKTtcblx0fWNhdGNoKGVycm9yKXtcblx0XHRyZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuXHRcdFx0bWVuc2FqZTogJ09jdXJyaW8gdW4gZXJyb3InLFxuXHRcdFx0ZXJyb3Jcblx0XHR9KVxuXHR9XG59KTtcblxuLy9EZWxldGUgZWxpbWluYXIgdW5hIG5vdGFcbnJvdXRlci5kZWxldGUoJy9ub3RhLzppZCcsIGFzeW5jKHJlcSwgcmVzKT0+e1xuXHRjb25zdCBfaWQgPSByZXEucGFyYW1zLmlkO1xuXHR0cnl7XG5cdFx0Y29uc3Qgbm90YURCID0gYXdhaXQgTm90YS5maW5kQnlJZEFuZERlbGV0ZSh7X2lkfSk7XG5cdFx0aWYoIW5vdGFEQil7XG5cdFx0XHRyZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuXHRcdFx0XHRtZW5zYWplOiAnT2N1cnJpbyB1biBlcnJvcicsXG5cdFx0XHRcdGVycm9yXG5cdFx0XHR9KVxuXHRcdH1cblx0XHRyZXMuanNvbihub3RhREIpO1xuXHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG5cdFx0XHRtZW5zYWplOiAnT2N1cnJpbyB1biBlcnJvcicsXG5cdFx0XHRlcnJvclxuXHRcdH0pXG5cdH1cbn0pO1xuXG4vL1BVVCBBY3R1YWxpemFyIHVuYSBub3RhXG5yb3V0ZXIucHV0KCcvbm90YS86aWQnLCBhc3luYyhyZXEsIHJlcyk9Pntcblx0Y29uc3QgX2lkID0gcmVxLnBhcmFtcy5pZDtcblx0Y29uc3QgYm9keSA9IHJlcS5ib2R5O1xuXHR0cnl7XG5cdFx0Y29uc3Qgbm90YURCID0gYXdhaXQgTm90YS5maW5kQnlJZEFuZFVwZGF0ZShfaWQsYm9keSx7bmV3OnRydWV9KTtcblx0XHRyZXMuanNvbihub3RhREIpO1xuXHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG5cdFx0XHRtZW5zYWplOiAnT2N1cnJpbyB1biBlcnJvcicsXG5cdFx0XHRlcnJvclxuXHRcdH0pXG5cdH1cbn0pO1xuLy9leHBvcnRhY2lvbiBkZSByb3V0ZXJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "nota.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "require",
        "verificarAuth",
        "verificarAdministrador",
        "post",
        "req",
        "res",
        "body",
        "usuarioId",
        "usuario",
        "_id",
        "Nota",
        "create",
        "notaDB",
        "status",
        "json",
        "mensaje",
        "error",
        "get",
        "params",
        "id",
        "findOne",
        "find",
        "findByIdAndDelete",
        "put",
        "findByIdAndUpdate",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAIA;;;;;;;;AAHA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;eAGgDC,OAAO,CAAC,8BAAD,C;IAAhDC,a,YAAAA,a;IAAeC,sB,YAAAA,sB,EAGtB;;;AACAL,MAAM,CAACM,IAAP,CAAY,aAAZ,EAA2BF,aAA3B;AAAA,qEAA0C,iBAAMG,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACnCC,YAAAA,IADmC,GAC5BF,GAAG,CAACE,IADwB;AAEzCA,YAAAA,IAAI,CAACC,SAAL,GAAiBH,GAAG,CAACI,OAAJ,CAAYC,GAA7B;AAFyC;AAAA;AAAA,mBAInBC,iBAAKC,MAAL,CAAYL,IAAZ,CAJmB;;AAAA;AAIlCM,YAAAA,MAJkC;AAKxCP,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB;AALwC;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAOjCP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAPiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1C;;AAAA;AAAA;AAAA;AAAA,K,CAcA;;AACAnB,MAAM,CAACoB,GAAP,CAAW,WAAX;AAAA,sEAAwB,kBAAMb,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBI,YAAAA,GADiB,GACXL,GAAG,CAACc,MAAJ,CAAWC,EADA;AAAA;AAAA;AAAA,mBAIDT,iBAAKU,OAAL,CAAa;AAACX,cAAAA,GAAG,EAAHA;AAAD,aAAb,CAJC;;AAAA;AAIhBG,YAAAA,MAJgB;AAKtBP,YAAAA,GAAG,CAACS,IAAJ,CAASF,MAAT;AALsB;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAOfP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,K,CAcA;;AACAnB,MAAM,CAACoB,GAAP,CAAW,OAAX,EAAoBhB,aAApB;AAAA,sEAAmC,kBAAMG,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5BE,YAAAA,SAF4B,GAEhBH,GAAG,CAACI,OAAJ,CAAYC,GAFI;AAAA;AAAA;AAAA,mBAIZC,iBAAKW,IAAL,CAAU;AAACd,cAAAA,SAAS,EAATA;AAAD,aAAV,CAJY;;AAAA;AAI3BK,YAAAA,MAJ2B;AAKjCP,YAAAA,GAAG,CAACS,IAAJ,CAASF,MAAT;AALiC;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAO1BP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAP0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA,K,CAcA;;AACAnB,MAAM,UAAN,CAAc,WAAd;AAAA,sEAA2B,kBAAMO,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACpBI,YAAAA,GADoB,GACdL,GAAG,CAACc,MAAJ,CAAWC,EADG;AAAA;AAAA;AAAA,mBAGJT,iBAAKY,iBAAL,CAAuB;AAACb,cAAAA,GAAG,EAAHA;AAAD,aAAvB,CAHI;;AAAA;AAGnBG,YAAAA,MAHmB;;AAAA,gBAIrBA,MAJqB;AAAA;AAAA;AAAA;;AAAA,8CAKjBP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK,EAALA;AAF2B,aAArB,CALiB;;AAAA;AAUzBX,YAAAA,GAAG,CAACS,IAAJ,CAASF,MAAT;AAVyB;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAYlBP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAZkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA,K,CAmBA;;AACAnB,MAAM,CAAC0B,GAAP,CAAW,WAAX;AAAA,sEAAwB,kBAAMnB,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBI,YAAAA,GADiB,GACXL,GAAG,CAACc,MAAJ,CAAWC,EADA;AAEjBb,YAAAA,IAFiB,GAEVF,GAAG,CAACE,IAFM;AAAA;AAAA;AAAA,mBAIDI,iBAAKc,iBAAL,CAAuBf,GAAvB,EAA2BH,IAA3B,EAAgC;AAAC,qBAAI;AAAL,aAAhC,CAJC;;AAAA;AAIhBM,YAAAA,MAJgB;AAKtBP,YAAAA,GAAG,CAACS,IAAJ,CAASF,MAAT;AALsB;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAOfP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,K,CAaA;;AACAS,MAAM,CAACC,OAAP,GAAiB7B,MAAjB",
      "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
      "sourcesContent": [
        "import express from 'express';\nconst router = express.Router();\n\n//importar el modelo nota\nimport Nota from '../models/nota';\n\nconst {verificarAuth, verificarAdministrador} = require('../middlewares/autenticacion')\n\n\n//Agregar nota\nrouter.post('/nueva-nota', verificarAuth, async(req, res) => {\n\tconst body = req.body;\n\tbody.usuarioId = req.usuario._id;\n\ttry{\n\t\tconst notaDB = await Nota.create(body);\n\t\tres.status(200).json(notaDB);\n\t}catch(error){\n\t\treturn res.status(500).json({\n\t\t\tmensaje: 'Ocurrio un error',\n\t\t\terror: error\n\t\t})\n\t}\n});\n\n//Get con parametros\nrouter.get('/nota/:id', async(req, res)=>{\n\tconst _id = req.params.id;\n\n\ttry{\n\t\tconst notaDB = await Nota.findOne({_id});\n\t\tres.json(notaDB);\n\t}catch(error){\n\t\treturn res.status(500).json({\n\t\t\tmensaje: 'Ocurrio un error',\n\t\t\terror\n\t\t})\n\t}\n});\n\n//Get con todos los documentos\nrouter.get('/nota', verificarAuth, async(req, res)=>{\n\n\tconst usuarioId = req.usuario._id;\n\ttry{\n\t\tconst notaDB = await Nota.find({usuarioId});\n\t\tres.json(notaDB);\n\t}catch(error){\n\t\treturn res.status(400).json({\n\t\t\tmensaje: 'Ocurrio un error',\n\t\t\terror\n\t\t})\n\t}\n});\n\n//Delete eliminar una nota\nrouter.delete('/nota/:id', async(req, res)=>{\n\tconst _id = req.params.id;\n\ttry{\n\t\tconst notaDB = await Nota.findByIdAndDelete({_id});\n\t\tif(!notaDB){\n\t\t\treturn res.status(400).json({\n\t\t\t\tmensaje: 'Ocurrio un error',\n\t\t\t\terror\n\t\t\t})\n\t\t}\n\t\tres.json(notaDB);\n\t}catch(error){\n\t\treturn res.status(400).json({\n\t\t\tmensaje: 'Ocurrio un error',\n\t\t\terror\n\t\t})\n\t}\n});\n\n//PUT Actualizar una nota\nrouter.put('/nota/:id', async(req, res)=>{\n\tconst _id = req.params.id;\n\tconst body = req.body;\n\ttry{\n\t\tconst notaDB = await Nota.findByIdAndUpdate(_id,body,{new:true});\n\t\tres.json(notaDB);\n\t}catch(error){\n\t\treturn res.status(400).json({\n\t\t\tmensaje: 'Ocurrio un error',\n\t\t\terror\n\t\t})\n\t}\n});\n//exportacion de router\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1584787372435
  },
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/models/nota.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/models/nota.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/models/nota.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/models/nota.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN/models",
        "sourceFileName": "nota.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar notaSchema = new Schema({\n  nombre: {\n    type: String,\n    required: [true, 'Nombre de la BD obligatorio']\n  },\n  descripcion: String,\n  usuarioId: String,\n  date: {\n    type: Date,\n    \"default\": Date.now\n  },\n  activo: {\n    type: Boolean,\n    \"default\": true\n  }\n}); //Convertir a un modelo\n\nvar Nota = _mongoose[\"default\"].model('Nota', notaSchema);\n\nvar _default = Nota;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGEuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJub3RhU2NoZW1hIiwibm9tYnJlIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwiZGVzY3JpcGNpb24iLCJ1c3VhcmlvSWQiLCJkYXRlIiwiRGF0ZSIsIm5vdyIsImFjdGl2byIsIkJvb2xlYW4iLCJOb3RhIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBLElBQU1BLE1BQU0sR0FBR0MscUJBQVNELE1BQXhCO0FBRUEsSUFBTUUsVUFBVSxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUM3QkcsRUFBQUEsTUFBTSxFQUFFO0FBQUNDLElBQUFBLElBQUksRUFBRUMsTUFBUDtBQUFlQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxJQUFELEVBQU8sNkJBQVA7QUFBekIsR0FEcUI7QUFFN0JDLEVBQUFBLFdBQVcsRUFBRUYsTUFGZ0I7QUFHN0JHLEVBQUFBLFNBQVMsRUFBRUgsTUFIa0I7QUFJN0JJLEVBQUFBLElBQUksRUFBRTtBQUFDTCxJQUFBQSxJQUFJLEVBQUVNLElBQVA7QUFBYSxlQUFTQSxJQUFJLENBQUNDO0FBQTNCLEdBSnVCO0FBSzdCQyxFQUFBQSxNQUFNLEVBQUU7QUFBQ1IsSUFBQUEsSUFBSSxFQUFFUyxPQUFQO0FBQWdCLGVBQVM7QUFBekI7QUFMcUIsQ0FBWCxDQUFuQixDLENBUUE7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHYixxQkFBU2MsS0FBVCxDQUFlLE1BQWYsRUFBdUJiLFVBQXZCLENBQWI7O2VBQ2VZLEkiLCJzb3VyY2VSb290IjoiL3Zhci93d3cvMTd2dWVtZXZuL01FVk4vbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmNvbnN0IFNjaGVtYSA9IG1vbmdvb3NlLlNjaGVtYTtcblxuY29uc3Qgbm90YVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuXHRub21icmU6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiBbdHJ1ZSwgJ05vbWJyZSBkZSBsYSBCRCBvYmxpZ2F0b3JpbyddfSxcblx0ZGVzY3JpcGNpb246IFN0cmluZyxcblx0dXN1YXJpb0lkOiBTdHJpbmcsXG5cdGRhdGU6IHt0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vd30sXG5cdGFjdGl2bzoge3R5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IHRydWV9XG59KTtcblxuLy9Db252ZXJ0aXIgYSB1biBtb2RlbG9cbmNvbnN0IE5vdGEgPSBtb25nb29zZS5tb2RlbCgnTm90YScsIG5vdGFTY2hlbWEpO1xuZXhwb3J0IGRlZmF1bHQgTm90YTtcblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nota.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "notaSchema",
        "nombre",
        "type",
        "String",
        "required",
        "descripcion",
        "usuarioId",
        "date",
        "Date",
        "now",
        "activo",
        "Boolean",
        "Nota",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAC7BG,EAAAA,MAAM,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,6BAAP;AAAzB,GADqB;AAE7BC,EAAAA,WAAW,EAAEF,MAFgB;AAG7BG,EAAAA,SAAS,EAAEH,MAHkB;AAI7BI,EAAAA,IAAI,EAAE;AAACL,IAAAA,IAAI,EAAEM,IAAP;AAAa,eAASA,IAAI,CAACC;AAA3B,GAJuB;AAK7BC,EAAAA,MAAM,EAAE;AAACR,IAAAA,IAAI,EAAES,OAAP;AAAgB,eAAS;AAAzB;AALqB,CAAX,CAAnB,C,CAQA;;AACA,IAAMC,IAAI,GAAGb,qBAASc,KAAT,CAAe,MAAf,EAAuBb,UAAvB,CAAb;;eACeY,I",
      "sourceRoot": "/var/www/17vuemevn/MEVN/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\nconst notaSchema = new Schema({\n\tnombre: {type: String, required: [true, 'Nombre de la BD obligatorio']},\n\tdescripcion: String,\n\tusuarioId: String,\n\tdate: {type: Date, default: Date.now},\n\tactivo: {type: Boolean, default: true}\n});\n\n//Convertir a un modelo\nconst Nota = mongoose.model('Nota', notaSchema);\nexport default Nota;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584683556795
  },
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/routes/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/routes/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/routes/user.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/routes/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = _express[\"default\"].Router(); //importar el modelo user\n\n\nvar _require = require('../middlewares/autenticacion'),\n    verificarAuth = _require.verificarAuth,\n    verificarAdministrador = _require.verificarAdministrador; //Hash contraseña\n\n\nvar bcrypt = require('bcrypt');\n\nvar saltRounds = 10;\nvar myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nvar someOtherPlaintextPassword = 'not_bacon'; //Filtrar campos de PUT\n\nvar _ = require('underscore'); //POST crear un nuevo usuario\n\n\nrouter.post('/nuevo-user', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var body, usuarioDB;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = {\n              nombre: req.body.nombre,\n              email: req.body.email,\n              role: req.body.role\n            };\n            body.pass = bcrypt.hashSync(req.body.pass, saltRounds);\n            _context.prev = 2;\n            _context.next = 5;\n            return _user[\"default\"].create(body);\n\n          case 5:\n            usuarioDB = _context.sent;\n            res.json(usuarioDB);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", res.status(500).json({\n              mensaje: 'Ocurrió un error',\n              error: _context.t0\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //PUT actualizar un nuevo usuario\n\nrouter.put('/usuario/:id', [verificarAuth, verificarAdministrador], /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _id, body, usuarioDB;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = req.params.id;\n            body = _.pick(req.body, ['nombre', 'email', 'pass', 'activo']);\n\n            if (body.pass) {\n              body.pass = bcrypt.hashSync(req.body.pass, saltRounds);\n            }\n\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _user[\"default\"].findByIdAndUpdate(_id, body, {\n              \"new\": true,\n              runValidators: true\n            });\n\n          case 6:\n            usuarioDB = _context2.sent;\n            return _context2.abrupt(\"return\", res.json(usuarioDB));\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](3);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              mensaje: 'Ocurrió un error',\n              error: _context2.t0\n            }));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 10]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInJlcXVpcmUiLCJ2ZXJpZmljYXJBdXRoIiwidmVyaWZpY2FyQWRtaW5pc3RyYWRvciIsImJjcnlwdCIsInNhbHRSb3VuZHMiLCJteVBsYWludGV4dFBhc3N3b3JkIiwic29tZU90aGVyUGxhaW50ZXh0UGFzc3dvcmQiLCJfIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJub21icmUiLCJlbWFpbCIsInJvbGUiLCJwYXNzIiwiaGFzaFN5bmMiLCJVc2VyIiwiY3JlYXRlIiwidXN1YXJpb0RCIiwianNvbiIsInN0YXR1cyIsIm1lbnNhamUiLCJlcnJvciIsInB1dCIsIl9pZCIsInBhcmFtcyIsImlkIiwicGljayIsImZpbmRCeUlkQW5kVXBkYXRlIiwicnVuVmFsaWRhdG9ycyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBSUE7Ozs7Ozs7O0FBSEEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmLEMsQ0FFQTs7O2VBR2dEQyxPQUFPLENBQUMsOEJBQUQsQztJQUFoREMsYSxZQUFBQSxhO0lBQWVDLHNCLFlBQUFBLHNCLEVBQ3RCOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1JLFVBQVUsR0FBRyxFQUFuQjtBQUNBLElBQU1DLG1CQUFtQixHQUFHLGdCQUE1QjtBQUNBLElBQU1DLDBCQUEwQixHQUFHLFdBQW5DLEMsQ0FFQTs7QUFDQSxJQUFNQyxDQUFDLEdBQUdQLE9BQU8sQ0FBQyxZQUFELENBQWpCLEMsQ0FFQTs7O0FBQ0FILE1BQU0sQ0FBQ1csSUFBUCxDQUFZLGFBQVo7QUFBQSxxRUFBMkIsaUJBQU1DLEdBQU4sRUFBV0MsR0FBWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDcEJDLFlBQUFBLElBRG9CLEdBQ2I7QUFDWkMsY0FBQUEsTUFBTSxFQUFFSCxHQUFHLENBQUNFLElBQUosQ0FBU0MsTUFETDtBQUVaQyxjQUFBQSxLQUFLLEVBQUVKLEdBQUcsQ0FBQ0UsSUFBSixDQUFTRSxLQUZKO0FBR1pDLGNBQUFBLElBQUksRUFBRUwsR0FBRyxDQUFDRSxJQUFKLENBQVNHO0FBSEgsYUFEYTtBQU0xQkgsWUFBQUEsSUFBSSxDQUFDSSxJQUFMLEdBQVlaLE1BQU0sQ0FBQ2EsUUFBUCxDQUFnQlAsR0FBRyxDQUFDRSxJQUFKLENBQVNJLElBQXpCLEVBQStCWCxVQUEvQixDQUFaO0FBTjBCO0FBQUE7QUFBQSxtQkFTRGEsaUJBQUtDLE1BQUwsQ0FBWVAsSUFBWixDQVRDOztBQUFBO0FBU25CUSxZQUFBQSxTQVRtQjtBQVV6QlQsWUFBQUEsR0FBRyxDQUFDVSxJQUFKLENBQVNELFNBQVQ7QUFWeUI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQSw2Q0FhbEJULEdBQUcsQ0FBQ1csTUFBSixDQUFXLEdBQVgsRUFBZ0JELElBQWhCLENBQXFCO0FBQzNCRSxjQUFBQSxPQUFPLEVBQUUsa0JBRGtCO0FBRTNCQyxjQUFBQSxLQUFLO0FBRnNCLGFBQXJCLENBYmtCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTNCOztBQUFBO0FBQUE7QUFBQTtBQUFBLEssQ0FxQkE7O0FBQ0ExQixNQUFNLENBQUMyQixHQUFQLENBQVcsY0FBWCxFQUEyQixDQUFDdkIsYUFBRCxFQUFnQkMsc0JBQWhCLENBQTNCO0FBQUEsc0VBQW9FLGtCQUFNTyxHQUFOLEVBQVdDLEdBQVg7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUU3RGUsWUFBQUEsR0FGNkQsR0FFdkRoQixHQUFHLENBQUNpQixNQUFKLENBQVdDLEVBRjRDO0FBRzdEaEIsWUFBQUEsSUFINkQsR0FHdERKLENBQUMsQ0FBQ3FCLElBQUYsQ0FBT25CLEdBQUcsQ0FBQ0UsSUFBWCxFQUFpQixDQUFDLFFBQUQsRUFBVSxPQUFWLEVBQWtCLE1BQWxCLEVBQXlCLFFBQXpCLENBQWpCLENBSHNEOztBQUluRSxnQkFBR0EsSUFBSSxDQUFDSSxJQUFSLEVBQWE7QUFDWkosY0FBQUEsSUFBSSxDQUFDSSxJQUFMLEdBQVlaLE1BQU0sQ0FBQ2EsUUFBUCxDQUFnQlAsR0FBRyxDQUFDRSxJQUFKLENBQVNJLElBQXpCLEVBQStCWCxVQUEvQixDQUFaO0FBQ0E7O0FBTmtFO0FBQUE7QUFBQSxtQkFRMUNhLGlCQUFLWSxpQkFBTCxDQUF1QkosR0FBdkIsRUFBMkJkLElBQTNCLEVBQWdDO0FBQUMscUJBQUksSUFBTDtBQUFXbUIsY0FBQUEsYUFBYSxFQUFFO0FBQTFCLGFBQWhDLENBUjBDOztBQUFBO0FBUTVEWCxZQUFBQSxTQVI0RDtBQUFBLDhDQVMzRFQsR0FBRyxDQUFDVSxJQUFKLENBQVNELFNBQVQsQ0FUMkQ7O0FBQUE7QUFBQTtBQUFBO0FBQUEsOENBWTNEVCxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUMzQkUsY0FBQUEsT0FBTyxFQUFFLGtCQURrQjtBQUUzQkMsY0FBQUEsS0FBSztBQUZzQixhQUFyQixDQVoyRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFwRTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQW1CQVEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkMsTUFBakIiLCJzb3VyY2VSb290IjoiL3Zhci93d3cvMTd2dWVtZXZuL01FVk4vcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vL2ltcG9ydGFyIGVsIG1vZGVsbyB1c2VyXG5pbXBvcnQgVXNlciBmcm9tICcuLi9tb2RlbHMvdXNlcic7XG5cbmNvbnN0IHt2ZXJpZmljYXJBdXRoLCB2ZXJpZmljYXJBZG1pbmlzdHJhZG9yfSA9IHJlcXVpcmUoJy4uL21pZGRsZXdhcmVzL2F1dGVudGljYWNpb24nKVxuLy9IYXNoIGNvbnRyYXNlw7FhXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQnKTtcbmNvbnN0IHNhbHRSb3VuZHMgPSAxMDtcbmNvbnN0IG15UGxhaW50ZXh0UGFzc3dvcmQgPSAnczAvXFwvXFxQNCQkdzByRCc7XG5jb25zdCBzb21lT3RoZXJQbGFpbnRleHRQYXNzd29yZCA9ICdub3RfYmFjb24nO1xuXG4vL0ZpbHRyYXIgY2FtcG9zIGRlIFBVVFxuY29uc3QgXyA9IHJlcXVpcmUoJ3VuZGVyc2NvcmUnKTtcblxuLy9QT1NUIGNyZWFyIHVuIG51ZXZvIHVzdWFyaW9cbnJvdXRlci5wb3N0KCcvbnVldm8tdXNlcicsIGFzeW5jKHJlcSwgcmVzKSA9PiB7XG5cdGNvbnN0IGJvZHkgPSB7XG5cdFx0bm9tYnJlOiByZXEuYm9keS5ub21icmUsXG5cdFx0ZW1haWw6IHJlcS5ib2R5LmVtYWlsLFxuXHRcdHJvbGU6IHJlcS5ib2R5LnJvbGVcblx0fVxuXHRib2R5LnBhc3MgPSBiY3J5cHQuaGFzaFN5bmMocmVxLmJvZHkucGFzcywgc2FsdFJvdW5kcyk7XG5cblx0dHJ5IHtcblx0XHRjb25zdCB1c3VhcmlvREIgPSBhd2FpdCBVc2VyLmNyZWF0ZShib2R5KTtcblx0XHRyZXMuanNvbih1c3VhcmlvREIpO1xuXG5cdH1jYXRjaChlcnJvcil7XG5cdFx0cmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcblx0XHRcdG1lbnNhamU6ICdPY3VycmnDsyB1biBlcnJvcicsXG5cdFx0XHRlcnJvclxuXHRcdH0pXG5cdH1cbn0pO1xuXG5cbi8vUFVUIGFjdHVhbGl6YXIgdW4gbnVldm8gdXN1YXJpb1xucm91dGVyLnB1dCgnL3VzdWFyaW8vOmlkJywgW3ZlcmlmaWNhckF1dGgsIHZlcmlmaWNhckFkbWluaXN0cmFkb3JdLCBhc3luYyhyZXEsIHJlcykgPT4ge1xuXG5cdGNvbnN0IF9pZCA9IHJlcS5wYXJhbXMuaWQ7XG5cdGNvbnN0IGJvZHkgPSBfLnBpY2socmVxLmJvZHksIFsnbm9tYnJlJywnZW1haWwnLCdwYXNzJywnYWN0aXZvJ10pO1xuXHRpZihib2R5LnBhc3Mpe1xuXHRcdGJvZHkucGFzcyA9IGJjcnlwdC5oYXNoU3luYyhyZXEuYm9keS5wYXNzLCBzYWx0Um91bmRzKTtcblx0fVxuXHR0cnkge1xuXHRcdGNvbnN0IHVzdWFyaW9EQiA9IGF3YWl0IFVzZXIuZmluZEJ5SWRBbmRVcGRhdGUoX2lkLGJvZHkse25ldzp0cnVlLCBydW5WYWxpZGF0b3JzOiB0cnVlfSlcblx0XHRyZXR1cm4gcmVzLmpzb24odXN1YXJpb0RCKTtcblxuXHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG5cdFx0XHRtZW5zYWplOiAnT2N1cnJpw7MgdW4gZXJyb3InLFxuXHRcdFx0ZXJyb3Jcblx0XHR9KVxuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "require",
        "verificarAuth",
        "verificarAdministrador",
        "bcrypt",
        "saltRounds",
        "myPlaintextPassword",
        "someOtherPlaintextPassword",
        "_",
        "post",
        "req",
        "res",
        "body",
        "nombre",
        "email",
        "role",
        "pass",
        "hashSync",
        "User",
        "create",
        "usuarioDB",
        "json",
        "status",
        "mensaje",
        "error",
        "put",
        "_id",
        "params",
        "id",
        "pick",
        "findByIdAndUpdate",
        "runValidators",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAIA;;;;;;;;AAHA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;eAGgDC,OAAO,CAAC,8BAAD,C;IAAhDC,a,YAAAA,a;IAAeC,sB,YAAAA,sB,EACtB;;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMI,UAAU,GAAG,EAAnB;AACA,IAAMC,mBAAmB,GAAG,gBAA5B;AACA,IAAMC,0BAA0B,GAAG,WAAnC,C,CAEA;;AACA,IAAMC,CAAC,GAAGP,OAAO,CAAC,YAAD,CAAjB,C,CAEA;;;AACAH,MAAM,CAACW,IAAP,CAAY,aAAZ;AAAA,qEAA2B,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,IADoB,GACb;AACZC,cAAAA,MAAM,EAAEH,GAAG,CAACE,IAAJ,CAASC,MADL;AAEZC,cAAAA,KAAK,EAAEJ,GAAG,CAACE,IAAJ,CAASE,KAFJ;AAGZC,cAAAA,IAAI,EAAEL,GAAG,CAACE,IAAJ,CAASG;AAHH,aADa;AAM1BH,YAAAA,IAAI,CAACI,IAAL,GAAYZ,MAAM,CAACa,QAAP,CAAgBP,GAAG,CAACE,IAAJ,CAASI,IAAzB,EAA+BX,UAA/B,CAAZ;AAN0B;AAAA;AAAA,mBASDa,iBAAKC,MAAL,CAAYP,IAAZ,CATC;;AAAA;AASnBQ,YAAAA,SATmB;AAUzBT,YAAAA,GAAG,CAACU,IAAJ,CAASD,SAAT;AAVyB;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAalBT,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC3BE,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAbkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA,K,CAqBA;;AACA1B,MAAM,CAAC2B,GAAP,CAAW,cAAX,EAA2B,CAACvB,aAAD,EAAgBC,sBAAhB,CAA3B;AAAA,sEAAoE,kBAAMO,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAE7De,YAAAA,GAF6D,GAEvDhB,GAAG,CAACiB,MAAJ,CAAWC,EAF4C;AAG7DhB,YAAAA,IAH6D,GAGtDJ,CAAC,CAACqB,IAAF,CAAOnB,GAAG,CAACE,IAAX,EAAiB,CAAC,QAAD,EAAU,OAAV,EAAkB,MAAlB,EAAyB,QAAzB,CAAjB,CAHsD;;AAInE,gBAAGA,IAAI,CAACI,IAAR,EAAa;AACZJ,cAAAA,IAAI,CAACI,IAAL,GAAYZ,MAAM,CAACa,QAAP,CAAgBP,GAAG,CAACE,IAAJ,CAASI,IAAzB,EAA+BX,UAA/B,CAAZ;AACA;;AANkE;AAAA;AAAA,mBAQ1Ca,iBAAKY,iBAAL,CAAuBJ,GAAvB,EAA2Bd,IAA3B,EAAgC;AAAC,qBAAI,IAAL;AAAWmB,cAAAA,aAAa,EAAE;AAA1B,aAAhC,CAR0C;;AAAA;AAQ5DX,YAAAA,SAR4D;AAAA,8CAS3DT,GAAG,CAACU,IAAJ,CAASD,SAAT,CAT2D;;AAAA;AAAA;AAAA;AAAA,8CAY3DT,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC3BE,cAAAA,OAAO,EAAE,kBADkB;AAE3BC,cAAAA,KAAK;AAFsB,aAArB,CAZ2D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApE;;AAAA;AAAA;AAAA;AAAA;AAmBAQ,MAAM,CAACC,OAAP,GAAiBnC,MAAjB",
      "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
      "sourcesContent": [
        "import express from 'express';\nconst router = express.Router();\n\n//importar el modelo user\nimport User from '../models/user';\n\nconst {verificarAuth, verificarAdministrador} = require('../middlewares/autenticacion')\n//Hash contraseña\nconst bcrypt = require('bcrypt');\nconst saltRounds = 10;\nconst myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nconst someOtherPlaintextPassword = 'not_bacon';\n\n//Filtrar campos de PUT\nconst _ = require('underscore');\n\n//POST crear un nuevo usuario\nrouter.post('/nuevo-user', async(req, res) => {\n\tconst body = {\n\t\tnombre: req.body.nombre,\n\t\temail: req.body.email,\n\t\trole: req.body.role\n\t}\n\tbody.pass = bcrypt.hashSync(req.body.pass, saltRounds);\n\n\ttry {\n\t\tconst usuarioDB = await User.create(body);\n\t\tres.json(usuarioDB);\n\n\t}catch(error){\n\t\treturn res.status(500).json({\n\t\t\tmensaje: 'Ocurrió un error',\n\t\t\terror\n\t\t})\n\t}\n});\n\n\n//PUT actualizar un nuevo usuario\nrouter.put('/usuario/:id', [verificarAuth, verificarAdministrador], async(req, res) => {\n\n\tconst _id = req.params.id;\n\tconst body = _.pick(req.body, ['nombre','email','pass','activo']);\n\tif(body.pass){\n\t\tbody.pass = bcrypt.hashSync(req.body.pass, saltRounds);\n\t}\n\ttry {\n\t\tconst usuarioDB = await User.findByIdAndUpdate(_id,body,{new:true, runValidators: true})\n\t\treturn res.json(usuarioDB);\n\n\t}catch(error){\n\t\treturn res.status(500).json({\n\t\t\tmensaje: 'Ocurrió un error',\n\t\t\terror\n\t\t})\n\t}\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584786216144
  },
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/models/user.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\n\nvar uniqueValidator = require('mongoose-unique-validator');\n\nvar roles = {\n  values: ['ADMIN', 'USER'],\n  message: '{VALUE} rol no válido'\n};\nvar userSchema = new Schema({\n  nombre: {\n    type: String,\n    required: [true, 'El nombre de es necesario']\n  },\n  email: {\n    type: String,\n    required: [true, 'El email de es necesario'],\n    unique: true\n  },\n  pass: {\n    type: String,\n    required: [true, 'Password obligatorio']\n  },\n  date: {\n    type: Date,\n    \"default\": Date.now\n  },\n  role: {\n    type: String,\n    \"default\": 'USER',\n    \"enum\": roles\n  },\n  activo: {\n    type: Boolean,\n    \"default\": true\n  }\n});\nuserSchema.plugin(uniqueValidator, {\n  message: 'Error, esperaba {PATH} que sea único'\n}); //Ocultar la contraseña\n\nuserSchema.methods.toJSON = function () {\n  var obj = this.toObject();\n  delete obj.pass;\n  return obj;\n}; //Convertir a un modelo\n\n\nvar User = _mongoose[\"default\"].model('User', userSchema);\n\nvar _default = User;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJ1bmlxdWVWYWxpZGF0b3IiLCJyZXF1aXJlIiwicm9sZXMiLCJ2YWx1ZXMiLCJtZXNzYWdlIiwidXNlclNjaGVtYSIsIm5vbWJyZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImVtYWlsIiwidW5pcXVlIiwicGFzcyIsImRhdGUiLCJEYXRlIiwibm93Iiwicm9sZSIsImFjdGl2byIsIkJvb2xlYW4iLCJwbHVnaW4iLCJtZXRob2RzIiwidG9KU09OIiwib2JqIiwidG9PYmplY3QiLCJVc2VyIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBLElBQU1BLE1BQU0sR0FBR0MscUJBQVNELE1BQXhCOztBQUVBLElBQU1FLGVBQWUsR0FBR0MsT0FBTyxDQUFDLDJCQUFELENBQS9COztBQUVBLElBQU1DLEtBQUssR0FBRztBQUNiQyxFQUFBQSxNQUFNLEVBQUUsQ0FBQyxPQUFELEVBQVUsTUFBVixDQURLO0FBRWJDLEVBQUFBLE9BQU8sRUFBRTtBQUZJLENBQWQ7QUFLQSxJQUFNQyxVQUFVLEdBQUcsSUFBSVAsTUFBSixDQUFXO0FBQzdCUSxFQUFBQSxNQUFNLEVBQUU7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFQyxNQUFQO0FBQWVDLElBQUFBLFFBQVEsRUFBRSxDQUFDLElBQUQsRUFBTywyQkFBUDtBQUF6QixHQURxQjtBQUU3QkMsRUFBQUEsS0FBSyxFQUFFO0FBQ05ILElBQUFBLElBQUksRUFBRUMsTUFEQTtBQUVOQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxJQUFELEVBQU8sMEJBQVAsQ0FGSjtBQUdORSxJQUFBQSxNQUFNLEVBQUU7QUFIRixHQUZzQjtBQU83QkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0xMLElBQUFBLElBQUksRUFBRUMsTUFERDtBQUVMQyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxJQUFELEVBQU8sc0JBQVA7QUFGTCxHQVB1QjtBQVk3QkksRUFBQUEsSUFBSSxFQUFFO0FBQUNOLElBQUFBLElBQUksRUFBRU8sSUFBUDtBQUFhLGVBQVNBLElBQUksQ0FBQ0M7QUFBM0IsR0FadUI7QUFhN0JDLEVBQUFBLElBQUksRUFBRTtBQUFDVCxJQUFBQSxJQUFJLEVBQUVDLE1BQVA7QUFBZSxlQUFTLE1BQXhCO0FBQWdDLFlBQU1OO0FBQXRDLEdBYnVCO0FBYzdCZSxFQUFBQSxNQUFNLEVBQUU7QUFBQ1YsSUFBQUEsSUFBSSxFQUFFVyxPQUFQO0FBQWdCLGVBQVM7QUFBekI7QUFkcUIsQ0FBWCxDQUFuQjtBQWlCQWIsVUFBVSxDQUFDYyxNQUFYLENBQWtCbkIsZUFBbEIsRUFBbUM7QUFBQ0ksRUFBQUEsT0FBTyxFQUFFO0FBQVYsQ0FBbkMsRSxDQUVBOztBQUNBQyxVQUFVLENBQUNlLE9BQVgsQ0FBbUJDLE1BQW5CLEdBQTRCLFlBQVU7QUFDckMsTUFBTUMsR0FBRyxHQUFHLEtBQUtDLFFBQUwsRUFBWjtBQUNBLFNBQU9ELEdBQUcsQ0FBQ1YsSUFBWDtBQUNBLFNBQU9VLEdBQVA7QUFDQSxDQUpELEMsQ0FNQTs7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHekIscUJBQVMwQixLQUFULENBQWUsTUFBZixFQUF1QnBCLFVBQXZCLENBQWI7O2VBQ2VtQixJIiwic291cmNlUm9vdCI6Ii92YXIvd3d3LzE3dnVlbWV2bi9NRVZOL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWE7XG5cbmNvbnN0IHVuaXF1ZVZhbGlkYXRvciA9IHJlcXVpcmUoJ21vbmdvb3NlLXVuaXF1ZS12YWxpZGF0b3InKTtcblxuY29uc3Qgcm9sZXMgPSB7XG5cdHZhbHVlczogWydBRE1JTicsICdVU0VSJ10sXG5cdG1lc3NhZ2U6ICd7VkFMVUV9IHJvbCBubyB2w6FsaWRvJ1xufVxuXG5jb25zdCB1c2VyU2NoZW1hID0gbmV3IFNjaGVtYSh7XG5cdG5vbWJyZToge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IFt0cnVlLCAnRWwgbm9tYnJlIGRlIGVzIG5lY2VzYXJpbyddfSxcblx0ZW1haWw6IHtcblx0XHR0eXBlOiBTdHJpbmcsXG5cdFx0cmVxdWlyZWQ6IFt0cnVlLCAnRWwgZW1haWwgZGUgZXMgbmVjZXNhcmlvJ10sXG5cdFx0dW5pcXVlOiB0cnVlXG5cdH0sXG5cdHBhc3M6IHtcblx0XHR0eXBlOiBTdHJpbmcsXG5cdFx0cmVxdWlyZWQ6IFt0cnVlLCAnUGFzc3dvcmQgb2JsaWdhdG9yaW8nXVxuXG5cdH0sXG5cdGRhdGU6IHt0eXBlOiBEYXRlLCBkZWZhdWx0OiBEYXRlLm5vd30sXG5cdHJvbGU6IHt0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdVU0VSJywgZW51bTogcm9sZXMgfSxcblx0YWN0aXZvOiB7dHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9LFxufSk7XG5cbnVzZXJTY2hlbWEucGx1Z2luKHVuaXF1ZVZhbGlkYXRvciwge21lc3NhZ2U6ICdFcnJvciwgZXNwZXJhYmEge1BBVEh9IHF1ZSBzZWEgw7puaWNvJ30pO1xuXG4vL09jdWx0YXIgbGEgY29udHJhc2XDsWFcbnVzZXJTY2hlbWEubWV0aG9kcy50b0pTT04gPSBmdW5jdGlvbigpe1xuXHRjb25zdCBvYmogPSB0aGlzLnRvT2JqZWN0KCk7XG5cdGRlbGV0ZSBvYmoucGFzcztcblx0cmV0dXJuIG9iajtcbn1cblxuLy9Db252ZXJ0aXIgYSB1biBtb2RlbG9cbmNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIHVzZXJTY2hlbWEpO1xuZXhwb3J0IGRlZmF1bHQgVXNlcjtcblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "uniqueValidator",
        "require",
        "roles",
        "values",
        "message",
        "userSchema",
        "nombre",
        "type",
        "String",
        "required",
        "email",
        "unique",
        "pass",
        "date",
        "Date",
        "now",
        "role",
        "activo",
        "Boolean",
        "plugin",
        "methods",
        "toJSON",
        "obj",
        "toObject",
        "User",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;;AAEA,IAAME,eAAe,GAAGC,OAAO,CAAC,2BAAD,CAA/B;;AAEA,IAAMC,KAAK,GAAG;AACbC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,MAAV,CADK;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAd;AAKA,IAAMC,UAAU,GAAG,IAAIP,MAAJ,CAAW;AAC7BQ,EAAAA,MAAM,EAAE;AAACC,IAAAA,IAAI,EAAEC,MAAP;AAAeC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,2BAAP;AAAzB,GADqB;AAE7BC,EAAAA,KAAK,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,0BAAP,CAFJ;AAGNE,IAAAA,MAAM,EAAE;AAHF,GAFsB;AAO7BC,EAAAA,IAAI,EAAE;AACLL,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,sBAAP;AAFL,GAPuB;AAY7BI,EAAAA,IAAI,EAAE;AAACN,IAAAA,IAAI,EAAEO,IAAP;AAAa,eAASA,IAAI,CAACC;AAA3B,GAZuB;AAa7BC,EAAAA,IAAI,EAAE;AAACT,IAAAA,IAAI,EAAEC,MAAP;AAAe,eAAS,MAAxB;AAAgC,YAAMN;AAAtC,GAbuB;AAc7Be,EAAAA,MAAM,EAAE;AAACV,IAAAA,IAAI,EAAEW,OAAP;AAAgB,eAAS;AAAzB;AAdqB,CAAX,CAAnB;AAiBAb,UAAU,CAACc,MAAX,CAAkBnB,eAAlB,EAAmC;AAACI,EAAAA,OAAO,EAAE;AAAV,CAAnC,E,CAEA;;AACAC,UAAU,CAACe,OAAX,CAAmBC,MAAnB,GAA4B,YAAU;AACrC,MAAMC,GAAG,GAAG,KAAKC,QAAL,EAAZ;AACA,SAAOD,GAAG,CAACV,IAAX;AACA,SAAOU,GAAP;AACA,CAJD,C,CAMA;;;AACA,IAAME,IAAI,GAAGzB,qBAAS0B,KAAT,CAAe,MAAf,EAAuBpB,UAAvB,CAAb;;eACemB,I",
      "sourceRoot": "/var/www/17vuemevn/MEVN/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nconst Schema = mongoose.Schema;\n\nconst uniqueValidator = require('mongoose-unique-validator');\n\nconst roles = {\n\tvalues: ['ADMIN', 'USER'],\n\tmessage: '{VALUE} rol no válido'\n}\n\nconst userSchema = new Schema({\n\tnombre: {type: String, required: [true, 'El nombre de es necesario']},\n\temail: {\n\t\ttype: String,\n\t\trequired: [true, 'El email de es necesario'],\n\t\tunique: true\n\t},\n\tpass: {\n\t\ttype: String,\n\t\trequired: [true, 'Password obligatorio']\n\n\t},\n\tdate: {type: Date, default: Date.now},\n\trole: {type: String, default: 'USER', enum: roles },\n\tactivo: {type: Boolean, default: true },\n});\n\nuserSchema.plugin(uniqueValidator, {message: 'Error, esperaba {PATH} que sea único'});\n\n//Ocultar la contraseña\nuserSchema.methods.toJSON = function(){\n\tconst obj = this.toObject();\n\tdelete obj.pass;\n\treturn obj;\n}\n\n//Convertir a un modelo\nconst User = mongoose.model('User', userSchema);\nexport default User;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584781110837
  },
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/routes/login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/routes/login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/routes/login.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/routes/login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar router = _express[\"default\"].Router();\n\nvar jwt = require('jsonwebtoken'); //importar el modelo user\n\n\n//Hash contraseña\nvar bcrypt = require('bcrypt');\n\nvar saltRounds = 10;\nvar myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nvar someOtherPlaintextPassword = 'not_bacon';\nrouter.post('/', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var body, usuarioDB, token;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //return res.json({mensaje: 'Login de acceso'})\n            body = req.body;\n            _context.prev = 1;\n            _context.next = 4;\n            return _user[\"default\"].findOne({\n              email: body.email\n            });\n\n          case 4:\n            usuarioDB = _context.sent;\n\n            if (usuarioDB) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(400).json({\n              mensaje: 'Email no encontrado'\n            }));\n\n          case 7:\n            if (bcrypt.compareSync(body.pass, usuarioDB.pass)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(400).json({\n              mensaje: 'Contraseña no encontrado'\n            }));\n\n          case 9:\n            //Generar TOKEN\n            token = jwt.sign({\n              data: usuarioDB\n            }, 'secret', {\n              expiresIn: 60 * 60\n            }); //dura una hora\n            //}, 'secret', { expiresIn: 60 * 60 * 24 * 30 }); para que dure un mes\n\n            res.json({\n              usuarioDB: usuarioDB,\n              token: token\n            });\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", res.status(500).json({\n              mensaje: 'Ocurrió un error',\n              error: _context.t0\n            }));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJqd3QiLCJyZXF1aXJlIiwiYmNyeXB0Iiwic2FsdFJvdW5kcyIsIm15UGxhaW50ZXh0UGFzc3dvcmQiLCJzb21lT3RoZXJQbGFpbnRleHRQYXNzd29yZCIsInBvc3QiLCJyZXEiLCJyZXMiLCJib2R5IiwiVXNlciIsImZpbmRPbmUiLCJlbWFpbCIsInVzdWFyaW9EQiIsInN0YXR1cyIsImpzb24iLCJtZW5zYWplIiwiY29tcGFyZVN5bmMiLCJwYXNzIiwidG9rZW4iLCJzaWduIiwiZGF0YSIsImV4cGlyZXNJbiIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFNQTs7Ozs7Ozs7QUFMQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7O0FBRUEsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUFuQixDLENBRUE7OztBQUdBO0FBQ0EsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRSxVQUFVLEdBQUcsRUFBbkI7QUFDQSxJQUFNQyxtQkFBbUIsR0FBRyxnQkFBNUI7QUFDQSxJQUFNQywwQkFBMEIsR0FBRyxXQUFuQztBQUdBUixNQUFNLENBQUNTLElBQVAsQ0FBWSxHQUFaO0FBQUEscUVBQWlCLGlCQUFNQyxHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2hCO0FBQ01DLFlBQUFBLElBRlUsR0FFSEYsR0FBRyxDQUFDRSxJQUZEO0FBQUE7QUFBQTtBQUFBLG1CQUtTQyxpQkFBS0MsT0FBTCxDQUFhO0FBQUNDLGNBQUFBLEtBQUssRUFBQ0gsSUFBSSxDQUFDRztBQUFaLGFBQWIsQ0FMVDs7QUFBQTtBQUtUQyxZQUFBQSxTQUxTOztBQUFBLGdCQU1YQSxTQU5XO0FBQUE7QUFBQTtBQUFBOztBQUFBLDZDQU9QTCxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMzQkMsY0FBQUEsT0FBTyxFQUFFO0FBRGtCLGFBQXJCLENBUE87O0FBQUE7QUFBQSxnQkFZWGQsTUFBTSxDQUFDZSxXQUFQLENBQW1CUixJQUFJLENBQUNTLElBQXhCLEVBQThCTCxTQUFTLENBQUNLLElBQXhDLENBWlc7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBYVBWLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzNCQyxjQUFBQSxPQUFPLEVBQUU7QUFEa0IsYUFBckIsQ0FiTzs7QUFBQTtBQWtCZjtBQUNNRyxZQUFBQSxLQW5CUyxHQW1CRG5CLEdBQUcsQ0FBQ29CLElBQUosQ0FBUztBQUNwQkMsY0FBQUEsSUFBSSxFQUFFUjtBQURjLGFBQVQsRUFFWCxRQUZXLEVBRUQ7QUFBRVMsY0FBQUEsU0FBUyxFQUFFLEtBQUs7QUFBbEIsYUFGQyxDQW5CQyxFQXFCdUI7QUFDdEM7O0FBQ0FkLFlBQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTO0FBQ1JGLGNBQUFBLFNBQVMsRUFBVEEsU0FEUTtBQUVSTSxjQUFBQSxLQUFLLEVBQUxBO0FBRlEsYUFBVDtBQXZCZTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLDZDQTZCUlgsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDM0JDLGNBQUFBLE9BQU8sRUFBRSxrQkFEa0I7QUFFM0JPLGNBQUFBLEtBQUs7QUFGc0IsYUFBckIsQ0E3QlE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBakI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFvQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjVCLE1BQWpCIiwic291cmNlUm9vdCI6Ii92YXIvd3d3LzE3dnVlbWV2bi9NRVZOL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbi8vaW1wb3J0YXIgZWwgbW9kZWxvIHVzZXJcbmltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyJztcblxuLy9IYXNoIGNvbnRyYXNlw7FhXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQnKTtcbmNvbnN0IHNhbHRSb3VuZHMgPSAxMDtcbmNvbnN0IG15UGxhaW50ZXh0UGFzc3dvcmQgPSAnczAvXFwvXFxQNCQkdzByRCc7XG5jb25zdCBzb21lT3RoZXJQbGFpbnRleHRQYXNzd29yZCA9ICdub3RfYmFjb24nO1xuXG5cbnJvdXRlci5wb3N0KCcvJywgYXN5bmMocmVxLCByZXMpID0+IHtcblx0Ly9yZXR1cm4gcmVzLmpzb24oe21lbnNhamU6ICdMb2dpbiBkZSBhY2Nlc28nfSlcblx0Y29uc3QgYm9keSA9IHJlcS5ib2R5XG5cdHRyeSB7XG5cdFx0Ly9Db21wcm9iYW1vcyBzaSBleGlzdGUgZWwgZW1haWwgZW4gbGEgREJcblx0XHRjb25zdCB1c3VhcmlvREIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoe2VtYWlsOmJvZHkuZW1haWx9KVxuXHRcdGlmKCF1c3VhcmlvREIpe1xuXHRcdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcblx0XHRcdFx0bWVuc2FqZTogJ0VtYWlsIG5vIGVuY29udHJhZG8nXG5cdFx0XHR9KVxuXHRcdH1cblx0XHQvL0FxdWkgZXZhbHVhbW9zIGxhIGNvbnRyYXNlw7FhXG5cdFx0aWYoIWJjcnlwdC5jb21wYXJlU3luYyhib2R5LnBhc3MsIHVzdWFyaW9EQi5wYXNzKSl7XG5cdFx0XHRyZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuXHRcdFx0XHRtZW5zYWplOiAnQ29udHJhc2XDsWEgbm8gZW5jb250cmFkbydcblx0XHRcdH0pXG5cdFx0fVxuXG5cdFx0Ly9HZW5lcmFyIFRPS0VOXG5cdFx0Y29uc3QgdG9rZW4gPSBqd3Quc2lnbih7XG5cdFx0ICBcdGRhdGE6IHVzdWFyaW9EQlxuXHRcdH0sICdzZWNyZXQnLCB7IGV4cGlyZXNJbjogNjAgKiA2MCB9KTsgLy9kdXJhIHVuYSBob3JhXG5cdFx0Ly99LCAnc2VjcmV0JywgeyBleHBpcmVzSW46IDYwICogNjAgKiAyNCAqIDMwIH0pOyBwYXJhIHF1ZSBkdXJlIHVuIG1lc1xuXHRcdHJlcy5qc29uKHtcblx0XHRcdHVzdWFyaW9EQixcblx0XHRcdHRva2VuXG5cdFx0fSlcblxuXHR9Y2F0Y2goZXJyb3Ipe1xuXHRcdHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG5cdFx0XHRtZW5zYWplOiAnT2N1cnJpw7MgdW4gZXJyb3InLFxuXHRcdFx0ZXJyb3Jcblx0XHR9KVxuXHR9XG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "jwt",
        "require",
        "bcrypt",
        "saltRounds",
        "myPlaintextPassword",
        "someOtherPlaintextPassword",
        "post",
        "req",
        "res",
        "body",
        "User",
        "findOne",
        "email",
        "usuarioDB",
        "status",
        "json",
        "mensaje",
        "compareSync",
        "pass",
        "token",
        "sign",
        "data",
        "expiresIn",
        "error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAMA;;;;;;;;AALA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB,C,CAEA;;;AAGA;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,UAAU,GAAG,EAAnB;AACA,IAAMC,mBAAmB,GAAG,gBAA5B;AACA,IAAMC,0BAA0B,GAAG,WAAnC;AAGAR,MAAM,CAACS,IAAP,CAAY,GAAZ;AAAA,qEAAiB,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACMC,YAAAA,IAFU,GAEHF,GAAG,CAACE,IAFD;AAAA;AAAA;AAAA,mBAKSC,iBAAKC,OAAL,CAAa;AAACC,cAAAA,KAAK,EAACH,IAAI,CAACG;AAAZ,aAAb,CALT;;AAAA;AAKTC,YAAAA,SALS;;AAAA,gBAMXA,SANW;AAAA;AAAA;AAAA;;AAAA,6CAOPL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE;AADkB,aAArB,CAPO;;AAAA;AAAA,gBAYXd,MAAM,CAACe,WAAP,CAAmBR,IAAI,CAACS,IAAxB,EAA8BL,SAAS,CAACK,IAAxC,CAZW;AAAA;AAAA;AAAA;;AAAA,6CAaPV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE;AADkB,aAArB,CAbO;;AAAA;AAkBf;AACMG,YAAAA,KAnBS,GAmBDnB,GAAG,CAACoB,IAAJ,CAAS;AACpBC,cAAAA,IAAI,EAAER;AADc,aAAT,EAEX,QAFW,EAED;AAAES,cAAAA,SAAS,EAAE,KAAK;AAAlB,aAFC,CAnBC,EAqBuB;AACtC;;AACAd,YAAAA,GAAG,CAACO,IAAJ,CAAS;AACRF,cAAAA,SAAS,EAATA,SADQ;AAERM,cAAAA,KAAK,EAALA;AAFQ,aAAT;AAvBe;AAAA;;AAAA;AAAA;AAAA;AAAA,6CA6BRX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE,kBADkB;AAE3BO,cAAAA,KAAK;AAFsB,aAArB,CA7BQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;AAoCAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/var/www/17vuemevn/MEVN/routes",
      "sourcesContent": [
        "import express from 'express';\nconst router = express.Router();\n\nconst jwt = require('jsonwebtoken');\n\n//importar el modelo user\nimport User from '../models/user';\n\n//Hash contraseña\nconst bcrypt = require('bcrypt');\nconst saltRounds = 10;\nconst myPlaintextPassword = 's0/\\/\\P4$$w0rD';\nconst someOtherPlaintextPassword = 'not_bacon';\n\n\nrouter.post('/', async(req, res) => {\n\t//return res.json({mensaje: 'Login de acceso'})\n\tconst body = req.body\n\ttry {\n\t\t//Comprobamos si existe el email en la DB\n\t\tconst usuarioDB = await User.findOne({email:body.email})\n\t\tif(!usuarioDB){\n\t\t\treturn res.status(400).json({\n\t\t\t\tmensaje: 'Email no encontrado'\n\t\t\t})\n\t\t}\n\t\t//Aqui evaluamos la contraseña\n\t\tif(!bcrypt.compareSync(body.pass, usuarioDB.pass)){\n\t\t\treturn res.status(400).json({\n\t\t\t\tmensaje: 'Contraseña no encontrado'\n\t\t\t})\n\t\t}\n\n\t\t//Generar TOKEN\n\t\tconst token = jwt.sign({\n\t\t  \tdata: usuarioDB\n\t\t}, 'secret', { expiresIn: 60 * 60 }); //dura una hora\n\t\t//}, 'secret', { expiresIn: 60 * 60 * 24 * 30 }); para que dure un mes\n\t\tres.json({\n\t\t\tusuarioDB,\n\t\t\ttoken\n\t\t})\n\n\t}catch(error){\n\t\treturn res.status(500).json({\n\t\t\tmensaje: 'Ocurrió un error',\n\t\t\terror\n\t\t})\n\t}\n})\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1584784563744
  },
  "{\"sourceRoot\":\"/var/www/17vuemevn/MEVN/middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/17vuemevn/MEVN\",\"filename\":\"/var/www/17vuemevn/MEVN/middlewares/autenticacion.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/17vuemevn/MEVN\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/17vuemevn/MEVN/middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/17vuemevn/MEVN",
      "filename": "/var/www/17vuemevn/MEVN/middlewares/autenticacion.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/17vuemevn/MEVN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/17vuemevn/MEVN/middlewares/autenticacion.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/17vuemevn/MEVN/middlewares/autenticacion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/17vuemevn/MEVN/middlewares",
        "sourceFileName": "autenticacion.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar jwt = require('jsonwebtoken');\n\nvar verificarAuth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var token;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            /*res.json({\n            \tmensaje:'Dentro del middleware'\n            })*/\n            token = req.get('token');\n            jwt.verify(token, 'secret', function (err, decoded) {\n              if (err) {\n                return res.status(401).json({\n                  mensaje: 'Usuario no valido',\n                  err: err\n                });\n              }\n\n              req.usuario = decoded.data;\n              next();\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function verificarAuth(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar verificarAdministrador = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res, next) {\n    var rol;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            rol = req.usuario.role;\n\n            if (!(rol === 'ADMIN')) {\n              _context2.next = 5;\n              break;\n            }\n\n            next();\n            _context2.next = 6;\n            break;\n\n          case 5:\n            return _context2.abrupt(\"return\", res.status(401).json({\n              mensaje: 'Usuario no valido'\n            }));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function verificarAdministrador(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  verificarAuth: verificarAuth,\n  verificarAdministrador: verificarAdministrador\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGVudGljYWNpb24uanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsInZlcmlmaWNhckF1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJnZXQiLCJ2ZXJpZnkiLCJlcnIiLCJkZWNvZGVkIiwic3RhdHVzIiwianNvbiIsIm1lbnNhamUiLCJ1c3VhcmlvIiwiZGF0YSIsInZlcmlmaWNhckFkbWluaXN0cmFkb3IiLCJyb2wiLCJyb2xlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUFuQjs7QUFDQSxJQUFNQyxhQUFhO0FBQUEscUVBQUcsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWixFQUFpQkMsSUFBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3JCOzs7QUFHTUMsWUFBQUEsS0FKZSxHQUlQSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxPQUFSLENBSk87QUFLckJQLFlBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXRixLQUFYLEVBQWtCLFFBQWxCLEVBQTJCLFVBQUNHLEdBQUQsRUFBTUMsT0FBTixFQUFnQjtBQUMxQyxrQkFBR0QsR0FBSCxFQUFPO0FBQ04sdUJBQU9MLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzNCQyxrQkFBQUEsT0FBTyxFQUFFLG1CQURrQjtBQUUzQkosa0JBQUFBLEdBQUcsRUFBSEE7QUFGMkIsaUJBQXJCLENBQVA7QUFJQTs7QUFDRE4sY0FBQUEsR0FBRyxDQUFDVyxPQUFKLEdBQWNKLE9BQU8sQ0FBQ0ssSUFBdEI7QUFDQVYsY0FBQUEsSUFBSTtBQUNKLGFBVEQ7O0FBTHFCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWJILGFBQWE7QUFBQTtBQUFBO0FBQUEsR0FBbkI7O0FBaUJBLElBQU1jLHNCQUFzQjtBQUFBLHNFQUFHLGtCQUFPYixHQUFQLEVBQVlDLEdBQVosRUFBaUJDLElBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUV4QlksWUFBQUEsR0FGd0IsR0FFbEJkLEdBQUcsQ0FBQ1csT0FBSixDQUFZSSxJQUZNOztBQUFBLGtCQUczQkQsR0FBRyxLQUFLLE9BSG1CO0FBQUE7QUFBQTtBQUFBOztBQUk3QlosWUFBQUEsSUFBSTtBQUp5QjtBQUFBOztBQUFBO0FBQUEsOENBTXRCRCxHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMzQkMsY0FBQUEsT0FBTyxFQUFFO0FBRGtCLGFBQXJCLENBTnNCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQXRCRyxzQkFBc0I7QUFBQTtBQUFBO0FBQUEsR0FBNUI7O0FBWUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFbEIsRUFBQUEsYUFBYSxFQUFiQSxhQUFGO0FBQWlCYyxFQUFBQSxzQkFBc0IsRUFBdEJBO0FBQWpCLENBQWpCIiwic291cmNlUm9vdCI6Ii92YXIvd3d3LzE3dnVlbWV2bi9NRVZOL21pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5jb25zdCB2ZXJpZmljYXJBdXRoID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG5cdC8qcmVzLmpzb24oe1xuXHRcdG1lbnNhamU6J0RlbnRybyBkZWwgbWlkZGxld2FyZSdcblx0fSkqL1xuXHRjb25zdCB0b2tlbiA9IHJlcS5nZXQoJ3Rva2VuJylcblx0and0LnZlcmlmeSh0b2tlbiwgJ3NlY3JldCcsKGVyciwgZGVjb2RlZCk9Pntcblx0XHRpZihlcnIpe1xuXHRcdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcblx0XHRcdFx0bWVuc2FqZTogJ1VzdWFyaW8gbm8gdmFsaWRvJyxcblx0XHRcdFx0ZXJyXG5cdFx0XHR9KVxuXHRcdH1cblx0XHRyZXEudXN1YXJpbyA9IGRlY29kZWQuZGF0YTtcblx0XHRuZXh0KCk7XG5cdH0pXG59XG5cbmNvbnN0IHZlcmlmaWNhckFkbWluaXN0cmFkb3IgPSBhc3luYyAocmVxLCByZXMsIG5leHQpID0+IHtcblxuXHRjb25zdCByb2wgPSByZXEudXN1YXJpby5yb2xlO1xuXHRpZihyb2wgPT09ICdBRE1JTicpe1xuXHRcdG5leHQoKTtcblx0fWVsc2V7XG5cdFx0cmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcblx0XHRcdG1lbnNhamU6ICdVc3VhcmlvIG5vIHZhbGlkbydcblx0XHR9KVxuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0geyB2ZXJpZmljYXJBdXRoLCB2ZXJpZmljYXJBZG1pbmlzdHJhZG9yIH1cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "autenticacion.js"
      ],
      "names": [
        "jwt",
        "require",
        "verificarAuth",
        "req",
        "res",
        "next",
        "token",
        "get",
        "verify",
        "err",
        "decoded",
        "status",
        "json",
        "mensaje",
        "usuario",
        "data",
        "verificarAdministrador",
        "rol",
        "role",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMC,aAAa;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB;;;AAGMC,YAAAA,KAJe,GAIPH,GAAG,CAACI,GAAJ,CAAQ,OAAR,CAJO;AAKrBP,YAAAA,GAAG,CAACQ,MAAJ,CAAWF,KAAX,EAAkB,QAAlB,EAA2B,UAACG,GAAD,EAAMC,OAAN,EAAgB;AAC1C,kBAAGD,GAAH,EAAO;AACN,uBAAOL,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,kBAAAA,OAAO,EAAE,mBADkB;AAE3BJ,kBAAAA,GAAG,EAAHA;AAF2B,iBAArB,CAAP;AAIA;;AACDN,cAAAA,GAAG,CAACW,OAAJ,GAAcJ,OAAO,CAACK,IAAtB;AACAV,cAAAA,IAAI;AACJ,aATD;;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbH,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAiBA,IAAMc,sBAAsB;AAAA,sEAAG,kBAAOb,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBY,YAAAA,GAFwB,GAElBd,GAAG,CAACW,OAAJ,CAAYI,IAFM;;AAAA,kBAG3BD,GAAG,KAAK,OAHmB;AAAA;AAAA;AAAA;;AAI7BZ,YAAAA,IAAI;AAJyB;AAAA;;AAAA;AAAA,8CAMtBD,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,cAAAA,OAAO,EAAE;AADkB,aAArB,CANsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBG,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;AAYAG,MAAM,CAACC,OAAP,GAAiB;AAAElB,EAAAA,aAAa,EAAbA,aAAF;AAAiBc,EAAAA,sBAAsB,EAAtBA;AAAjB,CAAjB",
      "sourceRoot": "/var/www/17vuemevn/MEVN/middlewares",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\nconst verificarAuth = async (req, res, next) => {\n\t/*res.json({\n\t\tmensaje:'Dentro del middleware'\n\t})*/\n\tconst token = req.get('token')\n\tjwt.verify(token, 'secret',(err, decoded)=>{\n\t\tif(err){\n\t\t\treturn res.status(401).json({\n\t\t\t\tmensaje: 'Usuario no valido',\n\t\t\t\terr\n\t\t\t})\n\t\t}\n\t\treq.usuario = decoded.data;\n\t\tnext();\n\t})\n}\n\nconst verificarAdministrador = async (req, res, next) => {\n\n\tconst rol = req.usuario.role;\n\tif(rol === 'ADMIN'){\n\t\tnext();\n\t}else{\n\t\treturn res.status(401).json({\n\t\t\tmensaje: 'Usuario no valido'\n\t\t})\n\t}\n}\n\nmodule.exports = { verificarAuth, verificarAdministrador }\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1584786191681
  }
}